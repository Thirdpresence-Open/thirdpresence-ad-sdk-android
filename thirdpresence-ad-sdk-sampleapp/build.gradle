apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def keyData;

def file = properties.getProperty("keystore.file")
if (file) {
    keyData = {
        storeFile new File('../' + file)
        storePassword properties.getProperty("keystore.password")
        keyAlias properties.getProperty("keystore.key.alias")
        keyPassword = properties.getProperty("keystore.key.password")
    }
} else {
    println 'Signing properties are not set in. Define keystore.file, keystore.password, keystore.key.alias and keystore.key.password in local.properties';
}

def server = properties.getProperty("server.name");
if (!server) {
    server = "production";
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.thirdpresence.adsdk.sampleapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 5
        versionName "2.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        if (keyData) {
            release keyData
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "SERVER_NAME", "\"${server}\""
        }

        release {
            if (keyData) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_NAME", "\"${server}\""
        }
    }

    lintOptions {
        abortOnError false
    }

}

repositories {
    google()
    jcenter()
    flatDir {
        dirs '../external'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation "com.android.support:support-compat:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:support-core-utils:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:preference-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    // Optional for getting Google Advertising ID
    implementation "com.google.android.gms:play-services-ads:${rootProject.ext.playServicesLibVersion}"
    implementation project(path: ':thirdpresence-ad-sdk')
    // Automated testing support
    androidTestImplementation "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    androidTestImplementation "com.android.support.test:runner:0.6-alpha"
    androidTestImplementation "com.android.support.test:rules:0.6-alpha"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:2.3-alpha"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:2.3-alpha"
    implementation "com.android.support.test.espresso:espresso-idling-resource:2.3-alpha"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:2.1.2"
}
