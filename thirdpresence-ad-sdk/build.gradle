apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.thirdpresence.adsdk.sdk'

def versionString = getVersionName()
def buildNum = getBuildNumber()
def fullVersionString = versionString + "." + buildNum
def siteUrl = 'https://github.com/Thirdpresence-Open/thirdpresence-ad-sdk-android'
def gitUrl = 'https://github.com/Thirdpresence-Open/thirdpresence-ad-sdk-android.git'

version = fullVersionString

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    useLibrary  'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode buildNum
        versionName versionString
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

configurations {
    javadocDeps
}

repositories {
    jcenter()
    mavenCentral()
    flatDir{
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile fileTree(include: ['*.jar'], dir: 'moat/libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-compat:25.3.1'
    compile 'com.android.support:support-core-utils:25.3.1'
    compile 'com.android.support:support-annotations:25.3.1'
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    pkg {
        repo = 'thirdpresence-ad-sdk-android'
        name = 'com.thirdpresence.adsdk.sdk'
        userOrg = "thirdpresence"

        version {
            name = fullVersionString
            released  = new Date()
            vcsTag = fullVersionString
        }

        licenses = ['Apache-2.0']
        vcsUrl = gitUrl
        websiteUrl = siteUrl
        publish = true
    }
    configurations = ['archives']
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Thirdpresence Ad SDK for Android'
                url siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'maokkone'
                        name 'Marko Okkonen'
                        email 'marko.okkonen@thirdpresence.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}


task writeVersionNumber << {
    def versionFile = new File("build/sdk_version.log")
    versionFile.write(fullVersionString)
}
build.dependsOn writeVersionNumber

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc, dependsOn: sourcesJar) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
    include("**/VideoAd.java")
    include("**/VideoAdManager.java")
    include("**/VideoInterstitial.java")
    include("**/RewardedVideo.java")
    include("**/BannerView.java")
    include("**/VideoBanner.java")
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task copyLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}