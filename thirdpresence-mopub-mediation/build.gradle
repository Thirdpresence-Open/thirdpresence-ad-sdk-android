apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.thirdpresence.adsdk.mediation.mopub'
version = rootProject.ext.versionString

def siteUrl = 'https://github.com/Thirdpresence-Open/thirdpresence-ad-sdk-android'
def gitUrl = 'https://github.com/Thirdpresence-Open/thirdpresence-ad-sdk-android.git'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary  'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode rootProject.ext.buildNum
        versionName rootProject.ext.versionString
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    google()
    jcenter()
    maven {
        url "https://s3.amazonaws.com/moat-sdk-builds"
    }
}

configurations {
    javadocDeps
}

dependencies {
    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    api "com.android.support:support-compat:${rootProject.ext.supportLibVersion}"
    api "com.android.support:support-core-utils:${rootProject.ext.supportLibVersion}"
    api "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    api "com.android.support:preference-v7:${rootProject.ext.supportLibVersion}"
    api "com.android.support:design:${rootProject.ext.supportLibVersion}"
    api "com.google.android.gms:play-services-ads:${rootProject.ext.playServicesLibVersion}"
    api project(':thirdpresence-ad-sdk')
    api('com.mopub:mopub-sdk:4.17.0@aar') {
        transitive = true
        exclude module: 'moat-mobile-app-kit' // To exclude Moat
    }
    api project(':thirdpresence-ad-sdk')
    javadocDeps project(':thirdpresence-ad-sdk').fileTree(include: ['*.jar'], dir: 'build/libs')
    javadocDeps 'com.mopub:mopub-sdk:4.17.0:sources'
    javadocDeps 'com.google.android.exoplayer:exoplayer:r1.5.6:sources'
    javadocDeps 'com.mopub.volley:mopub-volley:1.1.0:sources'
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    pkg {
        repo = 'thirdpresence-ad-sdk-android'
        name = 'com.thirdpresence.adsdk.mediation.mopub'
        userOrg = "thirdpresence"

        version {
            name = rootProject.ext.versionString
            released  = new Date()
            vcsTag = rootProject.ext.versionString
        }

        licenses = ['Apache-2.0']
        vcsUrl = gitUrl
        websiteUrl = siteUrl
        publish = true
    }
    configurations = ['archives']
}


install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Thirdpresence Ad SDK for Android - MoPub mediation library'
                url siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'maokkone'
                        name 'Marko Okkonen'
                        email 'marko.okkonen@thirdpresence.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc, dependsOn: sourcesJar) {
    source = android.sourceSets.main.java.srcDirs
    classpath = configurations.compile
    include '**/ThirdpresenceCustomEvent.java'
    include '**/ThirdpresenceCustomEventRewardedVideo.java'
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
